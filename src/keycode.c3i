<*
 SDL Keycodes
 For more information, see
 https://wiki.libsdl.org/SDL3/CategoryKeycode
 TODO: add missing documentation
*>
module sdl::keycode;

import sdl::stdinc;

typedef SDLKeycode = uint;

const SDLK_EXTENDED_MASK         = (1u << 29);
const SDLK_SCANCODE_MASK         = (1u << 30);
macro uint sdl_scancode_to_keycode(x) => X | SDLK_SCANCODE_MASK;
const SDLK_UNKNOWN               = 0x00000000u; /**< 0 */
const SDLK_RETURN                = 0x0000000du; /**< '\r' */
const SDLK_ESCAPE                = 0x0000001bu; /**< '\x1B' */
const SDLK_BACKSPACE             = 0x00000008u; /**< '\b' */
const SDLK_TAB                   = 0x00000009u; /**< '\t' */
const SDLK_SPACE                 = 0x00000020u; /**< ' ' */
const SDLK_EXCLAIM               = 0x00000021u; /**< '!' */
const SDLK_DBLAPOSTROPHE         = 0x00000022u; /**< '"' */
const SDLK_HASH                  = 0x00000023u; /**< '#' */
const SDLK_DOLLAR                = 0x00000024u; /**< '$' */
const SDLK_PERCENT               = 0x00000025u; /**< '%' */
const SDLK_AMPERSAND             = 0x00000026u; /**< '&' */
const SDLK_APOSTROPHE            = 0x00000027u; /**< '\'' */
const SDLK_LEFTPAREN             = 0x00000028u; /**< '(' */
const SDLK_RIGHTPAREN            = 0x00000029u; /**< ')' */
const SDLK_ASTERISK              = 0x0000002au; /**< '*' */
const SDLK_PLUS                  = 0x0000002bu; /**< '+' */
const SDLK_COMMA                 = 0x0000002cu; /**< ',' */
const SDLK_MINUS                 = 0x0000002du; /**< '-' */
const SDLK_PERIOD                = 0x0000002eu; /**< '.' */
const SDLK_SLASH                 = 0x0000002fu; /**< '/' */
const SDLK_0                     = 0x00000030u; /**< '0' */
const SDLK_1                     = 0x00000031u; /**< '1' */
const SDLK_2                     = 0x00000032u; /**< '2' */
const SDLK_3                     = 0x00000033u; /**< '3' */
const SDLK_4                     = 0x00000034u; /**< '4' */
const SDLK_5                     = 0x00000035u; /**< '5' */
const SDLK_6                     = 0x00000036u; /**< '6' */
const SDLK_7                     = 0x00000037u; /**< '7' */
const SDLK_8                     = 0x00000038u; /**< '8' */
const SDLK_9                     = 0x00000039u; /**< '9' */
const SDLK_COLON                 = 0x0000003au; /**< ':' */
const SDLK_SEMICOLON             = 0x0000003bu; /**< ';' */
const SDLK_LESS                  = 0x0000003cu; /**< '<' */
const SDLK_EQUALS                = 0x0000003du; /**< '=' */
const SDLK_GREATER               = 0x0000003eu; /**< '>' */
const SDLK_QUESTION              = 0x0000003fu; /**< '?' */
const SDLK_AT                    = 0x00000040u; /**< '@' */
const SDLK_LEFTBRACKET           = 0x0000005bu; /**< '[' */
const SDLK_BACKSLASH             = 0x0000005cu; /**< '\\' */
const SDLK_RIGHTBRACKET          = 0x0000005du; /**< ']' */
const SDLK_CARET                 = 0x0000005eu; /**< '^' */
const SDLK_UNDERSCORE            = 0x0000005fu; /**< '_' */
const SDLK_GRAVE                 = 0x00000060u; /**< '`' */
const SDLK_A                     = 0x00000061u; /**< 'a' */
const SDLK_B                     = 0x00000062u; /**< 'b' */
const SDLK_C                     = 0x00000063u; /**< 'c' */
const SDLK_D                     = 0x00000064u; /**< 'd' */
const SDLK_E                     = 0x00000065u; /**< 'e' */
const SDLK_F                     = 0x00000066u; /**< 'f' */
const SDLK_G                     = 0x00000067u; /**< 'g' */
const SDLK_H                     = 0x00000068u; /**< 'h' */
const SDLK_I                     = 0x00000069u; /**< 'i' */
const SDLK_J                     = 0x0000006au; /**< 'j' */
const SDLK_K                     = 0x0000006bu; /**< 'k' */
const SDLK_L                     = 0x0000006cu; /**< 'l' */
const SDLK_M                     = 0x0000006du; /**< 'm' */
const SDLK_N                     = 0x0000006eu; /**< 'n' */
const SDLK_O                     = 0x0000006fu; /**< 'o' */
const SDLK_P                     = 0x00000070u; /**< 'p' */
const SDLK_Q                     = 0x00000071u; /**< 'q' */
const SDLK_R                     = 0x00000072u; /**< 'r' */
const SDLK_S                     = 0x00000073u; /**< 's' */
const SDLK_T                     = 0x00000074u; /**< 't' */
const SDLK_U                     = 0x00000075u; /**< 'u' */
const SDLK_V                     = 0x00000076u; /**< 'v' */
const SDLK_W                     = 0x00000077u; /**< 'w' */
const SDLK_X                     = 0x00000078u; /**< 'x' */
const SDLK_Y                     = 0x00000079u; /**< 'y' */
const SDLK_Z                     = 0x0000007au; /**< 'z' */
const SDLK_LEFTBRACE             = 0x0000007bu; /**< '{' */
const SDLK_PIPE                  = 0x0000007cu; /**< '|' */
const SDLK_RIGHTBRACE            = 0x0000007du; /**< '}' */
const SDLK_TILDE                 = 0x0000007eu; /**< '~' */
const SDLK_DELETE                = 0x0000007fu; /**< '\x7F' */
const SDLK_PLUSMINUS             = 0x000000b1u; /**< '\xB1' */
const SDLK_CAPSLOCK              = 0x40000039u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CAPSLOCK) */
const SDLK_F1                    = 0x4000003au; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F1) */
const SDLK_F2                    = 0x4000003bu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F2) */
const SDLK_F3                    = 0x4000003cu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F3) */
const SDLK_F4                    = 0x4000003du; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F4) */
const SDLK_F5                    = 0x4000003eu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F5) */
const SDLK_F6                    = 0x4000003fu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F6) */
const SDLK_F7                    = 0x40000040u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F7) */
const SDLK_F8                    = 0x40000041u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F8) */
const SDLK_F9                    = 0x40000042u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F9) */
const SDLK_F10                   = 0x40000043u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F10) */
const SDLK_F11                   = 0x40000044u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F11) */
const SDLK_F12                   = 0x40000045u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F12) */
const SDLK_PRINTSCREEN           = 0x40000046u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRINTSCREEN) */
const SDLK_SCROLLLOCK            = 0x40000047u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SCROLLLOCK) */
const SDLK_PAUSE                 = 0x40000048u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAUSE) */
const SDLK_INSERT                = 0x40000049u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_INSERT) */
const SDLK_HOME                  = 0x4000004au; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HOME) */
const SDLK_PAGEUP                = 0x4000004bu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEUP) */
const SDLK_END                   = 0x4000004du; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_END) */
const SDLK_PAGEDOWN              = 0x4000004eu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEDOWN) */
const SDLK_RIGHT                 = 0x4000004fu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RIGHT) */
const SDLK_LEFT                  = 0x40000050u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LEFT) */
const SDLK_DOWN                  = 0x40000051u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DOWN) */
const SDLK_UP                    = 0x40000052u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UP) */
const SDLK_NUMLOCKCLEAR          = 0x40000053u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_NUMLOCKCLEAR) */
const SDLK_KP_DIVIDE             = 0x40000054u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DIVIDE) */
const SDLK_KP_MULTIPLY           = 0x40000055u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MULTIPLY) */
const SDLK_KP_MINUS              = 0x40000056u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MINUS) */
const SDLK_KP_PLUS               = 0x40000057u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUS) */
const SDLK_KP_ENTER              = 0x40000058u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_ENTER) */
const SDLK_KP_1                  = 0x40000059u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_1) */
const SDLK_KP_2                  = 0x4000005au; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_2) */
const SDLK_KP_3                  = 0x4000005bu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_3) */
const SDLK_KP_4                  = 0x4000005cu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_4) */
const SDLK_KP_5                  = 0x4000005du; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_5) */
const SDLK_KP_6                  = 0x4000005eu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_6) */
const SDLK_KP_7                  = 0x4000005fu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_7) */
const SDLK_KP_8                  = 0x40000060u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_8) */
const SDLK_KP_9                  = 0x40000061u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_9) */
const SDLK_KP_0                  = 0x40000062u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_0) */
const SDLK_KP_PERIOD             = 0x40000063u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERIOD) */
const SDLK_APPLICATION           = 0x40000065u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APPLICATION) */
const SDLK_POWER                 = 0x40000066u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_POWER) */
const SDLK_KP_EQUALS             = 0x40000067u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALS) */
const SDLK_F13                   = 0x40000068u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F13) */
const SDLK_F14                   = 0x40000069u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F14) */
const SDLK_F15                   = 0x4000006au; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F15) */
const SDLK_F16                   = 0x4000006bu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F16) */
const SDLK_F17                   = 0x4000006cu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F17) */
const SDLK_F18                   = 0x4000006du; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F18) */
const SDLK_F19                   = 0x4000006eu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F19) */
const SDLK_F20                   = 0x4000006fu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F20) */
const SDLK_F21                   = 0x40000070u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F21) */
const SDLK_F22                   = 0x40000071u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F22) */
const SDLK_F23                   = 0x40000072u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F23) */
const SDLK_F24                   = 0x40000073u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F24) */
const SDLK_EXECUTE               = 0x40000074u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXECUTE) */
const SDLK_HELP                  = 0x40000075u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HELP) */
const SDLK_MENU                  = 0x40000076u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MENU) */
const SDLK_SELECT                = 0x40000077u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SELECT) */
const SDLK_STOP                  = 0x40000078u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_STOP) */
const SDLK_AGAIN                 = 0x40000079u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AGAIN) */
const SDLK_UNDO                  = 0x4000007au; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UNDO) */
const SDLK_CUT                   = 0x4000007bu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CUT) */
const SDLK_COPY                  = 0x4000007cu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COPY) */
const SDLK_PASTE                 = 0x4000007du; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PASTE) */
const SDLK_FIND                  = 0x4000007eu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_FIND) */
const SDLK_MUTE                  = 0x4000007fu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MUTE) */
const SDLK_VOLUMEUP              = 0x40000080u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEUP) */
const SDLK_VOLUMEDOWN            = 0x40000081u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEDOWN) */
const SDLK_KP_COMMA              = 0x40000085u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COMMA) */
const SDLK_KP_EQUALSAS400        = 0x40000086u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALSAS400) */
const SDLK_ALTERASE              = 0x40000099u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ALTERASE) */
const SDLK_SYSREQ                = 0x4000009au; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SYSREQ) */
const SDLK_CANCEL                = 0x4000009bu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CANCEL) */
const SDLK_CLEAR                 = 0x4000009cu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEAR) */
const SDLK_PRIOR                 = 0x4000009du; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRIOR) */
const SDLK_RETURN2               = 0x4000009eu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RETURN2) */
const SDLK_SEPARATOR             = 0x4000009fu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SEPARATOR) */
const SDLK_OUT                   = 0x400000a0u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OUT) */
const SDLK_OPER                  = 0x400000a1u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OPER) */
const SDLK_CLEARAGAIN            = 0x400000a2u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEARAGAIN) */
const SDLK_CRSEL                 = 0x400000a3u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CRSEL) */
const SDLK_EXSEL                 = 0x400000a4u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXSEL) */
const SDLK_KP_00                 = 0x400000b0u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_00) */
const SDLK_KP_000                = 0x400000b1u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_000) */
const SDLK_THOUSANDSSEPARATOR    = 0x400000b2u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_THOUSANDSSEPARATOR) */
const SDLK_DECIMALSEPARATOR      = 0x400000b3u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DECIMALSEPARATOR) */
const SDLK_CURRENCYUNIT          = 0x400000b4u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYUNIT) */
const SDLK_CURRENCYSUBUNIT       = 0x400000b5u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYSUBUNIT) */
const SDLK_KP_LEFTPAREN          = 0x400000b6u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTPAREN) */
const SDLK_KP_RIGHTPAREN         = 0x400000b7u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTPAREN) */
const SDLK_KP_LEFTBRACE          = 0x400000b8u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTBRACE) */
const SDLK_KP_RIGHTBRACE         = 0x400000b9u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTBRACE) */
const SDLK_KP_TAB                = 0x400000bau; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_TAB) */
const SDLK_KP_BACKSPACE          = 0x400000bbu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BACKSPACE) */
const SDLK_KP_A                  = 0x400000bcu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_A) */
const SDLK_KP_B                  = 0x400000bdu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_B) */
const SDLK_KP_C                  = 0x400000beu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_C) */
const SDLK_KP_D                  = 0x400000bfu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_D) */
const SDLK_KP_E                  = 0x400000c0u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_E) */
const SDLK_KP_F                  = 0x400000c1u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_F) */
const SDLK_KP_XOR                = 0x400000c2u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_XOR) */
const SDLK_KP_POWER              = 0x400000c3u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_POWER) */
const SDLK_KP_PERCENT            = 0x400000c4u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERCENT) */
const SDLK_KP_LESS               = 0x400000c5u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LESS) */
const SDLK_KP_GREATER            = 0x400000c6u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_GREATER) */
const SDLK_KP_AMPERSAND          = 0x400000c7u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AMPERSAND) */
const SDLK_KP_DBLAMPERSAND       = 0x400000c8u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLAMPERSAND) */
const SDLK_KP_VERTICALBAR        = 0x400000c9u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_VERTICALBAR) */
const SDLK_KP_DBLVERTICALBAR     = 0x400000cau; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLVERTICALBAR) */
const SDLK_KP_COLON              = 0x400000cbu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COLON) */
const SDLK_KP_HASH               = 0x400000ccu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HASH) */
const SDLK_KP_SPACE              = 0x400000cdu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_SPACE) */
const SDLK_KP_AT                 = 0x400000ceu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AT) */
const SDLK_KP_EXCLAM             = 0x400000cfu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EXCLAM) */
const SDLK_KP_MEMSTORE           = 0x400000d0u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSTORE) */
const SDLK_KP_MEMRECALL          = 0x400000d1u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMRECALL) */
const SDLK_KP_MEMCLEAR           = 0x400000d2u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMCLEAR) */
const SDLK_KP_MEMADD             = 0x400000d3u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMADD) */
const SDLK_KP_MEMSUBTRACT        = 0x400000d4u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSUBTRACT) */
const SDLK_KP_MEMMULTIPLY        = 0x400000d5u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMMULTIPLY) */
const SDLK_KP_MEMDIVIDE          = 0x400000d6u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMDIVIDE) */
const SDLK_KP_PLUSMINUS          = 0x400000d7u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUSMINUS) */
const SDLK_KP_CLEAR              = 0x400000d8u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEAR) */
const SDLK_KP_CLEARENTRY         = 0x400000d9u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEARENTRY) */
const SDLK_KP_BINARY             = 0x400000dau; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BINARY) */
const SDLK_KP_OCTAL              = 0x400000dbu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_OCTAL) */
const SDLK_KP_DECIMAL            = 0x400000dcu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DECIMAL) */
const SDLK_KP_HEXADECIMAL        = 0x400000ddu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HEXADECIMAL) */
const SDLK_LCTRL                 = 0x400000e0u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LCTRL) */
const SDLK_LSHIFT                = 0x400000e1u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LSHIFT) */
const SDLK_LALT                  = 0x400000e2u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LALT) */
const SDLK_LGUI                  = 0x400000e3u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LGUI) */
const SDLK_RCTRL                 = 0x400000e4u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RCTRL) */
const SDLK_RSHIFT                = 0x400000e5u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RSHIFT) */
const SDLK_RALT                  = 0x400000e6u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RALT) */
const SDLK_RGUI                  = 0x400000e7u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RGUI) */
const SDLK_MODE                  = 0x40000101u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MODE) */
const SDLK_SLEEP                 = 0x40000102u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP) */
const SDLK_WAKE                  = 0x40000103u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_WAKE) */
const SDLK_CHANNEL_INCREMENT     = 0x40000104u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CHANNEL_INCREMENT) */
const SDLK_CHANNEL_DECREMENT     = 0x40000105u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CHANNEL_DECREMENT) */
const SDLK_MEDIA_PLAY            = 0x40000106u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_PLAY) */
const SDLK_MEDIA_PAUSE           = 0x40000107u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_PAUSE) */
const SDLK_MEDIA_RECORD          = 0x40000108u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_RECORD) */
const SDLK_MEDIA_FAST_FORWARD    = 0x40000109u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_FAST_FORWARD) */
const SDLK_MEDIA_REWIND          = 0x4000010au; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_REWIND) */
const SDLK_MEDIA_NEXT_TRACK      = 0x4000010bu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_NEXT_TRACK) */
const SDLK_MEDIA_PREVIOUS_TRACK  = 0x4000010cu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_PREVIOUS_TRACK) */
const SDLK_MEDIA_STOP            = 0x4000010du; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_STOP) */
const SDLK_MEDIA_EJECT           = 0x4000010eu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_EJECT) */
const SDLK_MEDIA_PLAY_PAUSE      = 0x4000010fu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_PLAY_PAUSE) */
const SDLK_MEDIA_SELECT          = 0x40000110u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_SELECT) */
const SDLK_AC_NEW                = 0x40000111u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_NEW) */
const SDLK_AC_OPEN               = 0x40000112u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_OPEN) */
const SDLK_AC_CLOSE              = 0x40000113u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_CLOSE) */
const SDLK_AC_EXIT               = 0x40000114u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_EXIT) */
const SDLK_AC_SAVE               = 0x40000115u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SAVE) */
const SDLK_AC_PRINT              = 0x40000116u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_PRINT) */
const SDLK_AC_PROPERTIES         = 0x40000117u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_PROPERTIES) */
const SDLK_AC_SEARCH             = 0x40000118u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SEARCH) */
const SDLK_AC_HOME               = 0x40000119u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_HOME) */
const SDLK_AC_BACK               = 0x4000011au; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BACK) */
const SDLK_AC_FORWARD            = 0x4000011bu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_FORWARD) */
const SDLK_AC_STOP               = 0x4000011cu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_STOP) */
const SDLK_AC_REFRESH            = 0x4000011du; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_REFRESH) */
const SDLK_AC_BOOKMARKS          = 0x4000011eu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BOOKMARKS) */
const SDLK_SOFTLEFT              = 0x4000011fu; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTLEFT) */
const SDLK_SOFTRIGHT             = 0x40000120u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTRIGHT) */
const SDLK_CALL                  = 0x40000121u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALL) */
const SDLK_ENDCALL               = 0x40000122u; /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ENDCALL) */
const SDLK_LEFT_TAB              = 0x20000001u; /**< Extended key Left Tab */
const SDLK_LEVEL5_SHIFT          = 0x20000002u; /**< Extended key Level 5 Shift */
const SDLK_MULTI_KEY_COMPOSE     = 0x20000003u; /**< Extended key Multi-key Compose */
const SDLK_LMETA                 = 0x20000004u; /**< Extended key Left Meta */
const SDLK_RMETA                 = 0x20000005u; /**< Extended key Right Meta */
const SDLK_LHYPER                = 0x20000006u; /**< Extended key Left Hyper */
const SDLK_RHYPER                = 0x20000007u; /**< Extended key Right Hyper */

typedef SDLKeymod = ushort;

const SDL_KMOD_NONE   =   0x0000u; /**< no modifier is applicable. */
const SDL_KMOD_LSHIFT =   0x0001u; /**< the left Shift key is down. */
const SDL_KMOD_RSHIFT =   0x0002u; /**< the right Shift key is down. */
const SDL_KMOD_LEVEL5 =   0x0004u; /**< the Level 5 Shift key is down. */
const SDL_KMOD_LCTRL  =   0x0040u; /**< the left Ctrl (Control) key is down. */
const SDL_KMOD_RCTRL  =   0x0080u; /**< the right Ctrl (Control) key is down. */
const SDL_KMOD_LALT   =   0x0100u; /**< the left Alt key is down. */
const SDL_KMOD_RALT   =   0x0200u; /**< the right Alt key is down. */
const SDL_KMOD_LGUI   =   0x0400u; /**< the left GUI key (often the Windows key) is down. */
const SDL_KMOD_RGUI   =   0x0800u; /**< the right GUI key (often the Windows key) is down. */
const SDL_KMOD_NUM    =   0x1000u; /**< the Num Lock key (may be located on an extended keypad) is down. */
const SDL_KMOD_CAPS   =   0x2000u; /**< the Caps Lock key is down. */
const SDL_KMOD_MODE   =   0x4000u; /**< the !AltGr key is down. */
const SDL_KMOD_SCROLL =   0x8000u; /**< the Scroll Lock key is down. */
const SDL_KMOD_CTRL   =   (SDL_KMOD_LCTRL | SDL_KMOD_RCTRL);   /**< Any Ctrl key is down. */
const SDL_KMOD_SHIFT  =   (SDL_KMOD_LSHIFT | SDL_KMOD_RSHIFT); /**< Any Shift key is down. */
const SDL_KMOD_ALT    =   (SDL_KMOD_LALT | SDL_KMOD_RALT);     /**< Any Alt key is down. */
const SDL_KMOD_GUI    =   (SDL_KMOD_LGUI | SDL_KMOD_RGUI);     /**< Any GUI key is down. */
